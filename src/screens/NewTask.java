/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screens;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;


/**
 *
 * @author Lucas
 */
public class NewTask extends javax.swing.JInternalFrame {
    
    boolean state = false;
    int duration = 0,currentTime =0, i=1;
    Color bg1=new Color(250, 225, 105),bg2=new Color(250, 225, 217);
    
    Timer myTimer = new Timer();
    TimerTask task = new TimerTask(){
        @Override
        public void run() {
            if(currentTime>0){
                if(state){
                    i*=-1;
                    Color background=(i>0)?bg1:bg2;
                    pane.setBackground(background);
                    setTime(currentTime-1);
                    setPercent();
                 }
            }else {
                myTimer.cancel();
                    pane.setBackground(new Color(126, 225, 105));
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(rootPane, "Tarefa Completa. Parab√©ns!");
            }
        
        
        }
    };
     
    public NewTask() {
        initComponents();
    }
    public void setName(String name){
        taskName.setText(name);
    }
    public void setTime(int time){
        if(duration==0)
            duration=time;//Tempo que foi reservado para a tarefa ao ser criada.
        currentTime=time;//Tempo restante para a tarefa.
        int hour = time/3600;
	int minutes = (time-3600*hour)/60;
        int seconds = time-(hour*3600 + minutes*60);
	String h = (hour<10)? "0"+Integer.toString(hour) :Integer.toString(hour);
	String m = (minutes<10)? "0"+Integer.toString(minutes) : Integer.toString(minutes);
        String s = (seconds<10)? "0"+Integer.toString(seconds) : Integer.toString(seconds);
	taskTime.setText(h+":"+m+":"+s);
    }
    public void startTimer(){
        state=true;
        myTimer.scheduleAtFixedRate(task, 0, 1000);       
    }
    public void pauseTimer(){
        state=(state)?false:true;
    }
    public void setPercent(){
        int value  = duration-currentTime;
        value = (value*100)/duration;
        txtPercent.setText(value+"%");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pane = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        taskTime = new javax.swing.JLabel();
        txtPercent = new javax.swing.JLabel();
        taskName = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(238, 104));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/control_play_blue.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/control_pause_blue.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        taskTime.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        taskTime.setText("00:00");

        txtPercent.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPercent.setText("0%");

        taskName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        taskName.setText("...");

        javax.swing.GroupLayout paneLayout = new javax.swing.GroupLayout(pane);
        pane.setLayout(paneLayout);
        paneLayout.setHorizontalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneLayout.createSequentialGroup()
                        .addComponent(taskName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPercent))
                    .addGroup(paneLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(taskTime)))
                .addContainerGap())
        );
        paneLayout.setVerticalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskName)
                    .addComponent(txtPercent))
                .addGap(18, 18, 18)
                .addGroup(paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(taskTime))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        startTimer();
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        pauseTimer();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel pane;
    public static javax.swing.JLabel taskName;
    private javax.swing.JLabel taskTime;
    private javax.swing.JLabel txtPercent;
    // End of variables declaration//GEN-END:variables
}
